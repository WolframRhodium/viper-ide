{
    "Acc": {
        "prefix": "acc",
        "body": [
            "acc(${1:x.value})"
        ],
        "description": "Access permission"
    },
    "Precondition": {
        "prefix": "requires",
        "body": [
            "requires ${1:true}"
        ],
        "description": "Precondition"
    },
    "Postcondition": {
        "prefix": "ensures",
        "body": [
            "ensures ${1:true}"
        ],
        "description": "Postcondition"
    },
    "Decreases": {
        "prefix": "decreases",
        "body": [
            "decreases"
        ],
        "description": "Decreases clause"
    },
    "Invariant": {
        "prefix": "invariant",
        "body": [
            "invariant ${1:true}"
        ],
        "description": "Loop invariant"
    },
    "Method": {
        "prefix": "method",
        "body": [
            "method ${1:foo}(${2}) returns ${5:(res:Int)}",
            "\trequires ${3:true}",
            "\tensures ${4:true}",
            "{",
            "\t${6:assert true}",
            "}"
        ],
        "description": "Method"
    },
    "Predicate": {
        "prefix": "predicate",
        "body": [
            "predicate ${1:foo}(${2:xs:Ref})",
            "{",
            "\t${3:acc(xs.next)}",
            "}"
        ],
        "description": "Predicate"
    },
    "Function": {
        "prefix": "function",
        "body": [
            "function ${1:foo}(${2:x:Int}): ${3:Bool}",
            "\trequires ${4:true}",
            "\tensures ${5:true}",
            "{",
            "\t${6}",
            "}"
        ],
        "description": "Function"
    },
    "Domain": {
        "prefix": "domain",
        "body": [
            "domain ${1:MyType[T]} {",
            "\tfunction ${2:oper(m:MyType[T])}: ${3:Bool}",
            "\taxiom ${4:ax_MyType} {",
                "\t\tforall ${5:m:MyType[T]} :: ",
                "\t\t\t{ ${6:oper(m)} }",
                "\t\t\t\t${7:oper(m) == true}",    
            "\t}",
            "}"
        ],
        "description": "Domain"
    },
    "Axiom": {
        "prefix": "axiom",
        "body": [
            "axiom ${1:ax_Foo}{",
            "\tforall ${2:n:Int, m:Int} :: ",
            "\t\t{ ${4:foo(n), foo(m)} }", 
            "\t\t\t${3:n < m ==> foo(n) < foo(m)}",
            "}"
        ],
        "description": "Axiom"
    },
    "If": {
        "prefix": "if",
        "body": [
            "if (${1:true})",
            "{",
            "\t${2}",
            "}",
            "else",
            "{",
            "\t${3}",
            "}"
        ],
        "description": "Conditional statement"
    },
    "While": {
        "prefix": "while",
        "body": [
            "while (${1:true})",
            "\tinvariant ${2:true}",
            "{",
            "\t${3}",
            "}"
        ],
        "description": "While loop"
    },
    "Forall": {
        "prefix": "forall", 
        "body": [
            "forall ${1:i:Int} :: { ${2} } ${3} ==> ${4:true}"
        ],
        "description": "Universal quantifier"
    },
    "Exists": {
        "prefix": "exists", 
        "body": [
            "exists ${1:i:Int} :: { ${2} } ${3:true}"
        ],
        "description": "Existential quantifier"
    }
}